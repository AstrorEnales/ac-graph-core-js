(function(g,y){typeof exports=="object"&&typeof module<"u"?y(exports):typeof define=="function"&&define.amd?define(["exports"],y):(g=typeof globalThis<"u"?globalThis:g||self,y(g.ACGraphCore={}))})(this,function(g){"use strict";var _=Object.defineProperty;var I=(g,y,x)=>y in g?_(g,y,{enumerable:!0,configurable:!0,writable:!0,value:x}):g[y]=x;var M=(g,y,x)=>I(g,typeof y!="symbol"?y+"":y,x);class y{}class x extends y{isSubgraphIsomorphic(e,n){const t=e.adjacencyMatrix.length,s=n.adjacencyMatrix.length;if(t>s)return!1;const a=e.labels&&n.labels,i=Array(s).fill(!1),r=Array(t).fill(-1),l=[],d=[],h=[],j=[];for(let f=0;f<t;f++){const o=e.adjacencyMatrix[f];l.push(o.reduce((u,c)=>u+c,0)),d.push(o.map((u,c)=>e.adjacencyMatrix[c][f]).reduce((u,c)=>u+c,0))}for(let f=0;f<s;f++){const o=n.adjacencyMatrix[f];h.push(o.reduce((u,c)=>u+c,0)),j.push(o.map((u,c)=>n.adjacencyMatrix[c][f]).reduce((u,c)=>u+c,0))}const L=l.map((f,o)=>h.map((u,c)=>u>=f&&j[c]>=d[o]&&(!a||e.labels[o]===n.labels[c])?c:-1).filter(u=>u!==-1)),p=f=>{if(f===t)return this.checkCompatibility(e,n,r);for(const o of L[f])if(!i[o]){if(r[f]=o,i[o]=!0,this.isFeasible(e,n,r,f)&&p(f+1))return!0;i[o]=!1,r[f]=-1}return!1};return p(0)}findAllSubgraphMonomorphisms(e,n){const t=e.adjacencyMatrix.length,s=n.adjacencyMatrix.length,a=[];if(t>s)return a;const i=e.labels&&n.labels,r=Array(s).fill(!1),l=Array(t).fill(-1),d=[],h=[],j=[],L=[];for(let o=0;o<t;o++){const u=e.adjacencyMatrix[o];d.push(u.reduce((c,b)=>c+b,0)),h.push(u.map((c,b)=>e.adjacencyMatrix[b][o]).reduce((c,b)=>c+b,0))}for(let o=0;o<s;o++){const u=n.adjacencyMatrix[o];j.push(u.reduce((c,b)=>c+b,0)),L.push(u.map((c,b)=>n.adjacencyMatrix[b][o]).reduce((c,b)=>c+b,0))}const p=d.map((o,u)=>j.map((c,b)=>c>=o&&L[b]>=h[u]&&(!i||e.labels[u]===n.labels[b])?b:-1).filter(c=>c!==-1)),f=o=>{if(o===t){this.checkCompatibility(e,n,l)&&a.push([...l]);return}for(const u of p[o])r[u]||(l[o]=u,r[u]=!0,this.isFeasible(e,n,l,o)&&f(o+1),r[u]=!1,l[o]=-1)};return f(0),a}isFeasible(e,n,t,s){const a=e.edgeLabels&&n.edgeLabels;for(let i=0;i<s;i++)if(e.adjacencyMatrix[s][i]&&(!n.adjacencyMatrix[t[s]][t[i]]||a&&e.edgeLabels[s][i]!==n.edgeLabels[t[s]][t[i]])||e.adjacencyMatrix[i][s]&&(!n.adjacencyMatrix[t[i]][t[s]]||a&&e.edgeLabels[i][s]!==n.edgeLabels[t[i]][t[s]]))return!1;return!0}checkCompatibility(e,n,t){const s=e.edgeLabels&&n.edgeLabels,a=e.adjacencyMatrix.length;for(let i=0;i<a;i++)for(let r=0;r<a;r++)if(e.adjacencyMatrix[i][r]&&(!n.adjacencyMatrix[t[i]][t[r]]||s&&e.edgeLabels[i][r]!==n.edgeLabels[t[i]][t[r]]))return!1;return!0}}const w=Object.freeze(Object.defineProperty({__proto__:null,GraphMatcher:y,UllmannGraphMatcher:x},Symbol.toStringTag,{value:"Module"})),m=class m{constructor(e,n=m.DefaultNodeKeySuffixGenerator){M(this,"nodeCount");M(this,"hasNodeLabels");M(this,"hasEdgeLabels");M(this,"graph");M(this,"nodeNeighbors",new Map);M(this,"nodeKeys",new Map);M(this,"inDegrees",new Map);M(this,"outDegrees",new Map);this.graph=e,this.nodeCount=e.adjacencyMatrix.length,this.hasNodeLabels=e.labels!==void 0,this.hasEdgeLabels=e.edgeLabels!==void 0;for(let t=0;t<this.nodeCount;t++){const s=new Set;let a=0,i=0;for(let l=0;l<this.nodeCount;l++)e.adjacencyMatrix[t][l]===1&&(i++,s.add(l)),e.adjacencyMatrix[l][t]===1&&(a++,s.add(l));this.inDegrees.set(t,a),this.outDegrees.set(t,i),this.nodeNeighbors.set(t,[...s]);const r=i+"|"+a+n(e,t);this.nodeKeys.set(t,r)}}canonicalize(){const e=new Array(this.nodeCount).fill(1);this.partitionByPropertyKeys(e);let n=null,t=null,s=null;return this.individualizeDFS(e,[],(a,i)=>{const r=this.buildRepresentationGraph(a),l=this.buildGraphString(r);(s===null||l.localeCompare(s)<0)&&(n=r,t=new Array(a.length),a.forEach((d,h)=>t[d-1]=h),s=l)}),[n,s,t]}partitionByPropertyKeys(e){const n=new Map;for(let s=0;s<this.nodeCount;s++){const a=this.nodeKeys.get(s);n.has(a)?n.get(a).push(s):n.set(a,[s])}let t=1;Array.from(n.keys()).sort((s,a)=>s.localeCompare(a)).forEach(s=>{const a=n.get(s);a.forEach(i=>e[i]=t),t+=a.length})}isCanon(e){return new Set(e).size===this.nodeCount}individualizeDFS(e,n,t){if(this.isCanon(e)){t(e,n);return}if(this.individualizationRefinement(e),this.isCanon(e)){t(e,n);return}const s=this.getCurrentCells(e),a=Array.from(s.entries()).sort(([i],[r])=>i-r).filter(([,i])=>i.length>1)[0];for(const i of a[1]){const r=[...e];a[1].forEach(l=>{l!==i&&(r[l]=a[0]+1)}),this.individualizeDFS(r,[...n,i],t)}}individualizationRefinement(e){let n=!1;for(;!n;){n=!0;const t=e.map((i,r)=>[this.nodeNeighbors.get(r).map(h=>{let j=e[h].toString();return this.hasEdgeLabels&&(j+=";"+this.graph.edgeLabels[r][h]+";"+this.graph.edgeLabels[h][r]),j}).sort().join("|"),r]),s=new Map;for(const[i,r]of t){const l=e[r];s.has(l)||s.set(l,new Map);const d=s.get(l);d.has(i)||d.set(i,[]),d.get(i).push(r)}const a=Array.from(s.keys()).sort();for(const i of a){const r=Array.from(s.get(i).entries());if(r.length>1){n=!1,r.sort(([d],[h])=>h.localeCompare(d));let l=i;r.forEach(([,d])=>{d.forEach(h=>e[h]=l),l+=d.length});break}}}}getCurrentCells(e){const n=new Map;return e.forEach((t,s)=>{n.has(t)?n.get(t).push(s):n.set(t,[s])}),n}buildRepresentationGraph(e){const n={adjacencyMatrix:Array.from({length:this.nodeCount},()=>new Array(this.nodeCount))};for(let t=0;t<this.nodeCount;t++)for(let s=0;s<this.nodeCount;s++)n.adjacencyMatrix[e[t]-1][e[s]-1]=this.graph.adjacencyMatrix[t][s];if(this.hasNodeLabels&&(n.labels=new Array(this.nodeCount),e.forEach((t,s)=>n.labels[t-1]=this.graph.labels[s])),this.hasEdgeLabels){n.edgeLabels=Array.from({length:this.nodeCount},()=>new Array(this.nodeCount));for(let t=0;t<this.nodeCount;t++)for(let s=0;s<this.nodeCount;s++)n.edgeLabels[e[t]-1][e[s]-1]=this.graph.edgeLabels[t][s]}return n}buildGraphString(e){const n=[];for(let t=0;t<this.nodeCount;t++)for(let s=0;s<this.nodeCount;s++)e.adjacencyMatrix[t][s]===1&&(this.hasEdgeLabels?n.push(t+"-"+e.edgeLabels[t][s]+"-"+s):n.push(t+"-"+s));return this.hasNodeLabels?n.join("|")+";"+e.labels.join("|"):n.join("|")}};M(m,"DefaultNodeKeySuffixGenerator",(e,n)=>e.labels?e.labels[n]:"");let S=m;const D=Object.freeze(Object.defineProperty({__proto__:null,GraphCanon:S},Symbol.toStringTag,{value:"Module"}));class A{static find(e){const n=[],t=new Set,s=(a,i)=>{t.add(a),i.push(a);for(let r=0;r<e.adjacencyMatrix.length;r++)(e.adjacencyMatrix[a][r]===1||e.adjacencyMatrix[r][a]===1)&&(t.has(r)||s(r,i))};for(let a=0;a<e.adjacencyMatrix.length;a++)if(!t.has(a)){const i=[];s(a,i),n.push(i)}return n}}const E=Object.freeze(Object.defineProperty({__proto__:null,ConnectedComponents:A,canon:D,matching:w},Symbol.toStringTag,{value:"Module"}));g.graph=E,Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=ac-graph-core-js.umd.cjs.map
